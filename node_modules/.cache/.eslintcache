[{"/home/arnav/Documents/Projects/arnav-bista.github.io/src/index.js":"1","/home/arnav/Documents/Projects/arnav-bista.github.io/src/common/NavBar.jsx":"2","/home/arnav/Documents/Projects/arnav-bista.github.io/src/common/ErrorPage.jsx":"3","/home/arnav/Documents/Projects/arnav-bista.github.io/src/routes/portfolio/Portfolio.jsx":"4","/home/arnav/Documents/Projects/arnav-bista.github.io/src/routes/portfolio/Tile.jsx":"5"},{"size":845,"mtime":1673630035581,"results":"6","hashOfConfig":"7"},{"size":1770,"mtime":1673630035581,"results":"8","hashOfConfig":"7"},{"size":392,"mtime":1673630035581,"results":"9","hashOfConfig":"7"},{"size":1612,"mtime":1673630035581,"results":"10","hashOfConfig":"7"},{"size":1205,"mtime":1673630035581,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11if5yj",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/home/arnav/Documents/Projects/arnav-bista.github.io/src/index.js",[],[],"/home/arnav/Documents/Projects/arnav-bista.github.io/src/common/NavBar.jsx",["30","31","32"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Outlet, Route, Link, useLocation } from 'react-router-dom';\r\n\r\nimport './NavBar.css';\r\n\r\nexport default function NavBar() {\r\n    const [page, setPage] = useState(0);\r\n\r\n    const linkText = [\"Portfolio\", \"About Me\", \"All Projects\", \"Tools\"];\r\n    const links = [\"/\", \"/aboutme\", \"/all\", \"/tools\"];\r\n\r\n    const currentPage = useLocation().pathname;\r\n\r\n    useEffect(() => {\r\n        const height = document.getElementById(\"navbar\").offsetHeight;\r\n        document.getElementById(\"filler\").style.minHeight = height + \"px\";\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {/* To maintain the same look from the OG Vanilla website. */}\r\n            <div id='filler'/>\r\n            <header id=\"navbar\">\r\n                <div className=\"container\">\r\n                    <Link\r\n                        className=\"logo-text\"\r\n                        to=\"/\"\r\n                    >AB</Link>\r\n                    <nav>\r\n                        <ul>\r\n                            {linkText.map((text, index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <Link\r\n                                            href={links[index]}\r\n                                            className={currentPage === links[index] ? \"selected\" : \"not\"}\r\n                                            to={links[index]}\r\n                                        >{text}</Link>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n            <Outlet />\r\n        </div>\r\n    );\r\n}","/home/arnav/Documents/Projects/arnav-bista.github.io/src/common/ErrorPage.jsx",[],[],"/home/arnav/Documents/Projects/arnav-bista.github.io/src/routes/portfolio/Portfolio.jsx",["33","34","35","36","37"],[],"import { useState } from 'react';\r\n\r\nimport \"./Portfolio.css\";\r\nimport Tile from './Tile.jsx';\r\n\r\n\r\nexport default function Portfolio() {\r\n\r\n    const [data, setData] = useState({});\r\n    fetch(\"../assets/data/projects.json\")\r\n        .then((response) => response.json())\r\n        .then((res) => setData((old) => ({ ...old, ...res })));\r\n\r\n    // console.log(data)\r\n\r\n    return (\r\n        <div>\r\n            <div className='main-intro'>\r\n                <a>Arnav Bista</a>\r\n                <a>1st Year CS student at The University of St Andrews</a>\r\n                <a>This is my Portfolio.</a>\r\n                <a>(This is a work in progress)</a>\r\n            </div>\r\n            <div className='main-content'>\r\n                {\r\n                    Object.keys(data).length !== 0 &&\r\n                    data.sections.map(\r\n                        (section) => {\r\n                            return (\r\n                                <div className='section'>\r\n                                    <a>{section.title}</a>\r\n                                    <ul>\r\n                                        {\r\n                                            section.data.map(\r\n                                                (tileData, index) => <li key={index}><Tile  data={tileData} /></li>\r\n                                            )\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","/home/arnav/Documents/Projects/arnav-bista.github.io/src/routes/portfolio/Tile.jsx",["38","39","40"],[],"import \"./Tile.css\";\r\n\r\nexport default function Tile(props) {\r\n\r\n    const redirect = () => {\r\n        window.location.href = props.data.link;\r\n    }\r\n\r\n    return (\r\n        <div className={\"tile\" + (props.data.link === \"#\" ? \" disabled\" : \"\")} onClick={redirect}>\r\n            <div className=\"tile-header\">\r\n                <p>{props.data.title}</p>\r\n            </div>\r\n            <img src={props.data.src} />\r\n            <div className=\"tile-body\">\r\n                <div className=\"multi-img\">\r\n                    {\r\n                        props.data.language.length <= 1 ?\r\n                        <img src={\"./assets/images/\" + props.data.language[0] + \".svg\"}/>\r\n                        :\r\n                        props.data.language.map(\r\n                            (language) => <img src={\"./assets/images/\" + language + \"-icon.svg\"}/>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"tile-body-detail\">\r\n                    <p className=\"title\">{props.data.title}</p>\r\n                    <div className=\"img-credits\">{\"Photo by \" + props.data.imgCredits}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}",{"ruleId":"41","severity":1,"message":"42","line":2,"column":18,"nodeType":"43","messageId":"44","endLine":2,"endColumn":23},{"ruleId":"41","severity":1,"message":"45","line":7,"column":12,"nodeType":"43","messageId":"44","endLine":7,"endColumn":16},{"ruleId":"41","severity":1,"message":"46","line":7,"column":18,"nodeType":"43","messageId":"44","endLine":7,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":19,"column":17,"nodeType":"49","endLine":19,"endColumn":20},{"ruleId":"47","severity":1,"message":"48","line":20,"column":17,"nodeType":"49","endLine":20,"endColumn":20},{"ruleId":"47","severity":1,"message":"48","line":21,"column":17,"nodeType":"49","endLine":21,"endColumn":20},{"ruleId":"47","severity":1,"message":"48","line":22,"column":17,"nodeType":"49","endLine":22,"endColumn":20},{"ruleId":"47","severity":1,"message":"48","line":31,"column":37,"nodeType":"49","endLine":31,"endColumn":40},{"ruleId":"50","severity":1,"message":"51","line":14,"column":13,"nodeType":"49","endLine":14,"endColumn":41},{"ruleId":"50","severity":1,"message":"51","line":19,"column":25,"nodeType":"49","endLine":19,"endColumn":90},{"ruleId":"50","severity":1,"message":"51","line":22,"column":43,"nodeType":"49","endLine":22,"endColumn":99},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]